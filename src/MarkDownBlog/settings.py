"""
Django settings for MarkDownBlog project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

from MarkDownBlog.config import *
import os

# 注意这个BaseDir,它指的是当前文件的上一层目录TT
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'iw-n2ot+iyb)$0)&7^r+rbhxo!3wa$*41fpj6bhgd=1js7t^#w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.1.201', '127.0.0.1', '192.168.1.190']

EMAIL_USE_TLS = False
EMAIL_HOST = EMAIL["host"]
EMAIL_PORT = EMAIL["port"]
EMAIL_HOST_USER = EMAIL["user"]
EMAIL_HOST_PASSWORD = EMAIL["password"]
DEFAULT_FROM_EMAIL = EMAIL["user"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'MarkDownBlog.blog',
    'MarkDownBlog.tools'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MarkDownBlog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(os.path.dirname(__file__), 'templates/' + THEME).replace('\\','/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MarkDownBlog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
# <script src="{% static 'js/blackAndWhite/jquery-2.1.3.min.js' %}"></script>
# 看这个，static就代表了这个STATIC_URL, 他会自己替换成STATIC_URL的，然后找的时候就去STATIC_URL中去找，
# 然而STATIC_URL又代表了下面STATICFILES_DIRS中的文件夹，所以会去下面的文件夹中找
# 至于模板文件，看上面的TEMPLATES配置
STATIC_URL = '/static/'

# 多个静态文件
STATICFILES_DIRS = (
    # 这么写的话就可以直接将静态文件和模板放在一起了
    # os.path.join(os.path.dirname(__file__), 'templates'+THEME)
    os.path.join(os.path.dirname(__file__), "public"),
    ROOT_DIR,
)
